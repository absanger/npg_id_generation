#!/usr/bin/env python3
# -*- coding: utf-8 -*-
#
# Copyright Â© 2022 Genome Research Ltd. All rights reserved.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
# @author Michael Kubiak <mk35@sanger.ac.uk>

import argparse

from npg_id_generation.pac_bio import PacBioEntity

parser = argparse.ArgumentParser(
    description="Generates a 64 character product id for a pac bio product.",
    formatter_class=argparse.RawTextHelpFormatter,
)

parser.add_argument(
    "-r",
    "--run_name",
    "--run-name",
    type=str,
    required=True,
    help="The name of the run to which the product belongs.",
)

parser.add_argument(
    "-w",
    "--well_label",
    "--well-label",
    required=True,
    type=str,
    help="""
The well in which the product was sequenced. 
A well label should fit the pattern A1.
     """,
)

parser.add_argument(
    "--tags",
    type=str,
    required=False,
    help="""
A comma separated list of tag sequences to include in id generation.  
This list is not resorted during id generation as it is expected 
that more than one product may have the same set of tags ordered 
differently. 
Tags are expected to be DNA sequences.
Tags should NOT be included in id generation for non-deplexed products.
    """,
)

args = parser.parse_args()


def main():
    print(
        f"{PacBioEntity(run_name=args.run_name, well_label=args.well_label, tags=args.tags).hash_product_id()}\n"
    )


if __name__ == "__main__":
    main()
